When would you want to use a remote repository rather than keeping all your work
local?

    Making a remote repository makes it possible to work on the same project with other people all around the world.

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

	Maybe I want to keep all those changes online until I really need to work with
	them on my local machine.

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

    Fork is made when you have no permission to collaborate one's repository. You
    instead form their repository and clone it to your account and work on that
    clone. But you can clone your own local repositories in a different location
    or you can clone your GitHub repositories as well. Branch is made only when 
    you want to commit a change but you don't want that change to be in the final 
    product yet. In that case you create a new branch and keep it separate from the original one.


What is the benefit of having a copy of the last known state of the remote
stored locally?

    It is usefull as a reference to check what was the state of last push or pull. You can add more changes to that project but the remote commit still stays in the same status. It also helps you if you are going to be offline for a while. So when you make some offline changes and want to see what changes have been made when you are gone, you can fetch them from remote repository and they branced from the last state of the remote repository. You can then deceide when and how to merge your changes.

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

    I would collaborate over a mail group or Google/Yahoo Groups. It would be harder 
    because of the extra work that every participant has to put. Managing changes in
    files would be more painfull. But it would maybe easier in the way that you are 
    much more in control in the process since it is manual. And you don't have to take the time to learn GitHub.

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

    Fill in your answer here
