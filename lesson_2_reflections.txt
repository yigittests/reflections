What happens when you initialize a repository? Why do you need to do it?
	
	It creates a hidden .git directory and it holds the configuration and history files necessary to make this directory a repository and for Git to work properly.s

How is the staging area different from the working directory and the repository?
What value do you think it offers?

	It is like a middle state where you organize the files before committing them to the repository. It offers flexibility in commits.

How can you use the staging area to make sure you have one commit per logical
change?

	It is up to me to deceide which files to add to the staging area. So if I have modified several files and I want to commit them per logical change, I can add them seperately to the staging area and commit with a message.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

How do the diagrams help you visualize the branch structure?

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges
manually?
